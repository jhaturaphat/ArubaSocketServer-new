'use strict';function cov_1sp7bemqnj(){var path="/Users/sitita/ArubaSocketServer/lib/buffer-util.js";var hash="262982a604b99072b3b35f57c2cea4d86d8f1787";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/sitita/ArubaSocketServer/lib/buffer-util.js",statementMap:{"0":{start:{line:3,column:25},end:{line:3,column:47}},"1":{start:{line:14,column:2},end:{line:14,column:45}},"2":{start:{line:14,column:25},end:{line:14,column:45}},"3":{start:{line:15,column:2},end:{line:15,column:40}},"4":{start:{line:15,column:25},end:{line:15,column:40}},"5":{start:{line:17,column:17},end:{line:17,column:48}},"6":{start:{line:18,column:15},end:{line:18,column:16}},"7":{start:{line:20,column:2},end:{line:24,column:3}},"8":{start:{line:20,column:15},end:{line:20,column:16}},"9":{start:{line:21,column:16},end:{line:21,column:23}},"10":{start:{line:22,column:4},end:{line:22,column:28}},"11":{start:{line:23,column:4},end:{line:23,column:25}},"12":{start:{line:26,column:2},end:{line:26,column:59}},"13":{start:{line:26,column:28},end:{line:26,column:59}},"14":{start:{line:28,column:2},end:{line:28,column:16}},"15":{start:{line:42,column:2},end:{line:44,column:3}},"16":{start:{line:42,column:15},end:{line:42,column:16}},"17":{start:{line:43,column:4},end:{line:43,column:49}},"18":{start:{line:56,column:17},end:{line:56,column:30}},"19":{start:{line:57,column:2},end:{line:59,column:3}},"20":{start:{line:57,column:15},end:{line:57,column:16}},"21":{start:{line:58,column:4},end:{line:58,column:29}},"22":{start:{line:70,column:2},end:{line:72,column:3}},"23":{start:{line:71,column:4},end:{line:71,column:22}},"24":{start:{line:74,column:2},end:{line:74,column:75}},"25":{start:{line:86,column:2},end:{line:86,column:27}},"26":{start:{line:88,column:2},end:{line:88,column:41}},"27":{start:{line:88,column:29},end:{line:88,column:41}},"28":{start:{line:92,column:2},end:{line:99,column:3}},"29":{start:{line:93,column:4},end:{line:93,column:28}},"30":{start:{line:94,column:9},end:{line:99,column:3}},"31":{start:{line:95,column:4},end:{line:95,column:69}},"32":{start:{line:97,column:4},end:{line:97,column:28}},"33":{start:{line:98,column:4},end:{line:98,column:30}},"34":{start:{line:101,column:2},end:{line:101,column:13}},"35":{start:{line:104,column:0},end:{line:129,column:1}},"36":{start:{line:105,column:21},end:{line:105,column:42}},"37":{start:{line:106,column:13},end:{line:106,column:48}},"38":{start:{line:108,column:2},end:{line:120,column:4}},"39":{start:{line:111,column:6},end:{line:112,column:57}},"40":{start:{line:111,column:23},end:{line:111,column:67}},"41":{start:{line:112,column:11},end:{line:112,column:57}},"42":{start:{line:117,column:6},end:{line:118,column:35}},"43":{start:{line:117,column:30},end:{line:117,column:52}},"44":{start:{line:118,column:11},end:{line:118,column:35}}},fnMap:{"0":{name:"concat",decl:{start:{line:13,column:9},end:{line:13,column:15}},loc:{start:{line:13,column:35},end:{line:29,column:1}},line:13},"1":{name:"_mask",decl:{start:{line:41,column:9},end:{line:41,column:14}},loc:{start:{line:41,column:53},end:{line:45,column:1}},line:41},"2":{name:"_unmask",decl:{start:{line:54,column:9},end:{line:54,column:16}},loc:{start:{line:54,column:31},end:{line:60,column:1}},line:54},"3":{name:"toArrayBuffer",decl:{start:{line:69,column:9},end:{line:69,column:22}},loc:{start:{line:69,column:28},end:{line:75,column:1}},line:69},"4":{name:"toBuffer",decl:{start:{line:85,column:9},end:{line:85,column:17}},loc:{start:{line:85,column:24},end:{line:102,column:1}},line:85},"5":{name:"(anonymous_5)",decl:{start:{line:110,column:4},end:{line:110,column:5}},loc:{start:{line:110,column:47},end:{line:113,column:5}},line:110},"6":{name:"(anonymous_6)",decl:{start:{line:116,column:4},end:{line:116,column:5}},loc:{start:{line:116,column:25},end:{line:119,column:5}},line:116}},branchMap:{"0":{loc:{start:{line:14,column:2},end:{line:14,column:45}},type:"if",locations:[{start:{line:14,column:2},end:{line:14,column:45}},{start:{line:14,column:2},end:{line:14,column:45}}],line:14},"1":{loc:{start:{line:15,column:2},end:{line:15,column:40}},type:"if",locations:[{start:{line:15,column:2},end:{line:15,column:40}},{start:{line:15,column:2},end:{line:15,column:40}}],line:15},"2":{loc:{start:{line:26,column:2},end:{line:26,column:59}},type:"if",locations:[{start:{line:26,column:2},end:{line:26,column:59}},{start:{line:26,column:2},end:{line:26,column:59}}],line:26},"3":{loc:{start:{line:70,column:2},end:{line:72,column:3}},type:"if",locations:[{start:{line:70,column:2},end:{line:72,column:3}},{start:{line:70,column:2},end:{line:72,column:3}}],line:70},"4":{loc:{start:{line:88,column:2},end:{line:88,column:41}},type:"if",locations:[{start:{line:88,column:2},end:{line:88,column:41}},{start:{line:88,column:2},end:{line:88,column:41}}],line:88},"5":{loc:{start:{line:92,column:2},end:{line:99,column:3}},type:"if",locations:[{start:{line:92,column:2},end:{line:99,column:3}},{start:{line:92,column:2},end:{line:99,column:3}}],line:92},"6":{loc:{start:{line:94,column:9},end:{line:99,column:3}},type:"if",locations:[{start:{line:94,column:9},end:{line:99,column:3}},{start:{line:94,column:9},end:{line:99,column:3}}],line:94},"7":{loc:{start:{line:106,column:13},end:{line:106,column:48}},type:"binary-expr",locations:[{start:{line:106,column:13},end:{line:106,column:34}},{start:{line:106,column:38},end:{line:106,column:48}}],line:106},"8":{loc:{start:{line:111,column:6},end:{line:112,column:57}},type:"if",locations:[{start:{line:111,column:6},end:{line:112,column:57}},{start:{line:111,column:6},end:{line:112,column:57}}],line:111},"9":{loc:{start:{line:117,column:6},end:{line:118,column:35}},type:"if",locations:[{start:{line:117,column:6},end:{line:118,column:35}},{start:{line:117,column:6},end:{line:118,column:35}}],line:117}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"262982a604b99072b3b35f57c2cea4d86d8f1787"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1sp7bemqnj=function(){return actualCoverage;};}return actualCoverage;}cov_1sp7bemqnj();const{EMPTY_BUFFER}=(cov_1sp7bemqnj().s[0]++,require('./constants'));/**
 * Merges an array of buffers into a new buffer.
 *
 * @param {Buffer[]} list The array of buffers to concat
 * @param {Number} totalLength The total length of buffers in the list
 * @return {Buffer} The resulting buffer
 * @public
 */function concat(list,totalLength){cov_1sp7bemqnj().f[0]++;cov_1sp7bemqnj().s[1]++;if(list.length===0){cov_1sp7bemqnj().b[0][0]++;cov_1sp7bemqnj().s[2]++;return EMPTY_BUFFER;}else{cov_1sp7bemqnj().b[0][1]++;}cov_1sp7bemqnj().s[3]++;if(list.length===1){cov_1sp7bemqnj().b[1][0]++;cov_1sp7bemqnj().s[4]++;return list[0];}else{cov_1sp7bemqnj().b[1][1]++;}const target=(cov_1sp7bemqnj().s[5]++,Buffer.allocUnsafe(totalLength));let offset=(cov_1sp7bemqnj().s[6]++,0);cov_1sp7bemqnj().s[7]++;for(let i=(cov_1sp7bemqnj().s[8]++,0);i<list.length;i++){const buf=(cov_1sp7bemqnj().s[9]++,list[i]);cov_1sp7bemqnj().s[10]++;target.set(buf,offset);cov_1sp7bemqnj().s[11]++;offset+=buf.length;}cov_1sp7bemqnj().s[12]++;if(offset<totalLength){cov_1sp7bemqnj().b[2][0]++;cov_1sp7bemqnj().s[13]++;return target.slice(0,offset);}else{cov_1sp7bemqnj().b[2][1]++;}cov_1sp7bemqnj().s[14]++;return target;}/**
 * Masks a buffer using the given mask.
 *
 * @param {Buffer} source The buffer to mask
 * @param {Buffer} mask The mask to use
 * @param {Buffer} output The buffer where to store the result
 * @param {Number} offset The offset at which to start writing
 * @param {Number} length The number of bytes to mask.
 * @public
 */function _mask(source,mask,output,offset,length){cov_1sp7bemqnj().f[1]++;cov_1sp7bemqnj().s[15]++;for(let i=(cov_1sp7bemqnj().s[16]++,0);i<length;i++){cov_1sp7bemqnj().s[17]++;output[offset+i]=source[i]^mask[i&3];}}/**
 * Unmasks a buffer using the given mask.
 *
 * @param {Buffer} buffer The buffer to unmask
 * @param {Buffer} mask The mask to use
 * @public
 */function _unmask(buffer,mask){cov_1sp7bemqnj().f[2]++;// Required until https://github.com/nodejs/node/issues/9006 is resolved.
const length=(cov_1sp7bemqnj().s[18]++,buffer.length);cov_1sp7bemqnj().s[19]++;for(let i=(cov_1sp7bemqnj().s[20]++,0);i<length;i++){cov_1sp7bemqnj().s[21]++;buffer[i]^=mask[i&3];}}/**
 * Converts a buffer to an `ArrayBuffer`.
 *
 * @param {Buffer} buf The buffer to convert
 * @return {ArrayBuffer} Converted buffer
 * @public
 */function toArrayBuffer(buf){cov_1sp7bemqnj().f[3]++;cov_1sp7bemqnj().s[22]++;if(buf.byteLength===buf.buffer.byteLength){cov_1sp7bemqnj().b[3][0]++;cov_1sp7bemqnj().s[23]++;return buf.buffer;}else{cov_1sp7bemqnj().b[3][1]++;}cov_1sp7bemqnj().s[24]++;return buf.buffer.slice(buf.byteOffset,buf.byteOffset+buf.byteLength);}/**
 * Converts `data` to a `Buffer`.
 *
 * @param {*} data The data to convert
 * @return {Buffer} The buffer
 * @throws {TypeError}
 * @public
 */function toBuffer(data){cov_1sp7bemqnj().f[4]++;cov_1sp7bemqnj().s[25]++;toBuffer.readOnly=true;cov_1sp7bemqnj().s[26]++;if(Buffer.isBuffer(data)){cov_1sp7bemqnj().b[4][0]++;cov_1sp7bemqnj().s[27]++;return data;}else{cov_1sp7bemqnj().b[4][1]++;}let buf;cov_1sp7bemqnj().s[28]++;if(data instanceof ArrayBuffer){cov_1sp7bemqnj().b[5][0]++;cov_1sp7bemqnj().s[29]++;buf=Buffer.from(data);}else{cov_1sp7bemqnj().b[5][1]++;cov_1sp7bemqnj().s[30]++;if(ArrayBuffer.isView(data)){cov_1sp7bemqnj().b[6][0]++;cov_1sp7bemqnj().s[31]++;buf=Buffer.from(data.buffer,data.byteOffset,data.byteLength);}else{cov_1sp7bemqnj().b[6][1]++;cov_1sp7bemqnj().s[32]++;buf=Buffer.from(data);cov_1sp7bemqnj().s[33]++;toBuffer.readOnly=false;}}cov_1sp7bemqnj().s[34]++;return buf;}cov_1sp7bemqnj().s[35]++;try{const bufferUtil=(cov_1sp7bemqnj().s[36]++,require('bufferutil'));const bu=(cov_1sp7bemqnj().s[37]++,(cov_1sp7bemqnj().b[7][0]++,bufferUtil.BufferUtil)||(cov_1sp7bemqnj().b[7][1]++,bufferUtil));cov_1sp7bemqnj().s[38]++;module.exports={concat,mask(source,mask,output,offset,length){cov_1sp7bemqnj().f[5]++;cov_1sp7bemqnj().s[39]++;if(length<48){cov_1sp7bemqnj().b[8][0]++;cov_1sp7bemqnj().s[40]++;_mask(source,mask,output,offset,length);}else{cov_1sp7bemqnj().b[8][1]++;cov_1sp7bemqnj().s[41]++;bu.mask(source,mask,output,offset,length);}},toArrayBuffer,toBuffer,unmask(buffer,mask){cov_1sp7bemqnj().f[6]++;cov_1sp7bemqnj().s[42]++;if(buffer.length<32){cov_1sp7bemqnj().b[9][0]++;cov_1sp7bemqnj().s[43]++;_unmask(buffer,mask);}else{cov_1sp7bemqnj().b[9][1]++;cov_1sp7bemqnj().s[44]++;bu.unmask(buffer,mask);}}};}catch(e)/* istanbul ignore next */{module.exports={concat,mask:_mask,toArrayBuffer,toBuffer,unmask:_unmask};}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,