'use strict';function cov_b1mxuecj0(){var path="/Users/sitita/ArubaSocketServer/lib/permessage-deflate.js";var hash="32930b894766b488b0e5de8cd5b346c4f9e3539f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/sitita/ArubaSocketServer/lib/permessage-deflate.js",statementMap:{"0":{start:{line:3,column:13},end:{line:3,column:28}},"1":{start:{line:5,column:19},end:{line:5,column:43}},"2":{start:{line:6,column:16},end:{line:6,column:36}},"3":{start:{line:7,column:30},end:{line:7,column:52}},"4":{start:{line:9,column:16},end:{line:9,column:53}},"5":{start:{line:10,column:27},end:{line:10,column:55}},"6":{start:{line:11,column:21},end:{line:11,column:43}},"7":{start:{line:12,column:18},end:{line:12,column:36}},"8":{start:{line:13,column:17},end:{line:13,column:34}},"9":{start:{line:14,column:15},end:{line:14,column:30}},"10":{start:{line:54,column:4},end:{line:54,column:38}},"11":{start:{line:55,column:4},end:{line:55,column:34}},"12":{start:{line:56,column:4},end:{line:57,column:77}},"13":{start:{line:58,column:4},end:{line:58,column:32}},"14":{start:{line:59,column:4},end:{line:59,column:25}},"15":{start:{line:60,column:4},end:{line:60,column:25}},"16":{start:{line:62,column:4},end:{line:62,column:23}},"17":{start:{line:64,column:4},end:{line:70,column:5}},"18":{start:{line:66,column:8},end:{line:68,column:14}},"19":{start:{line:69,column:6},end:{line:69,column:45}},"20":{start:{line:77,column:4},end:{line:77,column:32}},"21":{start:{line:87,column:19},end:{line:87,column:21}},"22":{start:{line:89,column:4},end:{line:91,column:5}},"23":{start:{line:90,column:6},end:{line:90,column:47}},"24":{start:{line:92,column:4},end:{line:94,column:5}},"25":{start:{line:93,column:6},end:{line:93,column:47}},"26":{start:{line:95,column:4},end:{line:97,column:5}},"27":{start:{line:96,column:6},end:{line:96,column:72}},"28":{start:{line:98,column:4},end:{line:102,column:5}},"29":{start:{line:99,column:6},end:{line:99,column:72}},"30":{start:{line:100,column:11},end:{line:102,column:5}},"31":{start:{line:101,column:6},end:{line:101,column:43}},"32":{start:{line:104,column:4},end:{line:104,column:18}},"33":{start:{line:115,column:4},end:{line:115,column:58}},"34":{start:{line:117,column:4},end:{line:119,column:44}},"35":{start:{line:121,column:4},end:{line:121,column:23}},"36":{start:{line:130,column:4},end:{line:133,column:5}},"37":{start:{line:131,column:6},end:{line:131,column:28}},"38":{start:{line:132,column:6},end:{line:132,column:27}},"39":{start:{line:135,column:4},end:{line:148,column:5}},"40":{start:{line:136,column:23},end:{line:136,column:47}},"41":{start:{line:138,column:6},end:{line:138,column:28}},"42":{start:{line:139,column:6},end:{line:139,column:27}},"43":{start:{line:141,column:6},end:{line:147,column:7}},"44":{start:{line:142,column:8},end:{line:146,column:10}},"45":{start:{line:159,column:17},end:{line:159,column:30}},"46":{start:{line:160,column:21},end:{line:175,column:6}},"47":{start:{line:161,column:6},end:{line:172,column:7}},"48":{start:{line:171,column:8},end:{line:171,column:21}},"49":{start:{line:174,column:6},end:{line:174,column:18}},"50":{start:{line:177,column:4},end:{line:179,column:5}},"51":{start:{line:178,column:6},end:{line:178,column:70}},"52":{start:{line:181,column:4},end:{line:183,column:5}},"53":{start:{line:182,column:6},end:{line:182,column:49}},"54":{start:{line:184,column:4},end:{line:186,column:5}},"55":{start:{line:185,column:6},end:{line:185,column:49}},"56":{start:{line:187,column:4},end:{line:189,column:5}},"57":{start:{line:188,column:6},end:{line:188,column:65}},"58":{start:{line:190,column:4},end:{line:197,column:5}},"59":{start:{line:191,column:6},end:{line:191,column:65}},"60":{start:{line:192,column:11},end:{line:197,column:5}},"61":{start:{line:196,column:6},end:{line:196,column:45}},"62":{start:{line:199,column:4},end:{line:199,column:20}},"63":{start:{line:210,column:19},end:{line:210,column:30}},"64":{start:{line:212,column:4},end:{line:217,column:5}},"65":{start:{line:216,column:6},end:{line:216,column:75}},"66":{start:{line:219,column:4},end:{line:231,column:5}},"67":{start:{line:220,column:6},end:{line:222,column:7}},"68":{start:{line:221,column:8},end:{line:221,column:74}},"69":{start:{line:223,column:11},end:{line:231,column:5}},"70":{start:{line:228,column:6},end:{line:230,column:8}},"71":{start:{line:233,column:4},end:{line:233,column:18}},"72":{start:{line:244,column:4},end:{line:291,column:7}},"73":{start:{line:245,column:6},end:{line:290,column:9}},"74":{start:{line:246,column:20},end:{line:246,column:31}},"75":{start:{line:248,column:8},end:{line:250,column:9}},"76":{start:{line:249,column:10},end:{line:249,column:78}},"77":{start:{line:252,column:8},end:{line:252,column:25}},"78":{start:{line:254,column:8},end:{line:287,column:9}},"79":{start:{line:255,column:10},end:{line:267,column:11}},"80":{start:{line:256,column:24},end:{line:256,column:30}},"81":{start:{line:257,column:12},end:{line:261,column:13}},"82":{start:{line:258,column:14},end:{line:260,column:16}},"83":{start:{line:262,column:12},end:{line:262,column:24}},"84":{start:{line:263,column:17},end:{line:267,column:11}},"85":{start:{line:264,column:12},end:{line:266,column:14}},"86":{start:{line:268,column:15},end:{line:287,column:9}},"87":{start:{line:269,column:22},end:{line:269,column:28}},"88":{start:{line:270,column:10},end:{line:274,column:11}},"89":{start:{line:271,column:12},end:{line:273,column:14}},"90":{start:{line:275,column:10},end:{line:275,column:22}},"91":{start:{line:276,column:15},end:{line:287,column:9}},"92":{start:{line:280,column:10},end:{line:284,column:11}},"93":{start:{line:281,column:12},end:{line:283,column:14}},"94":{start:{line:286,column:10},end:{line:286,column:56}},"95":{start:{line:289,column:8},end:{line:289,column:28}},"96":{start:{line:293,column:4},end:{line:293,column:26}},"97":{start:{line:305,column:4},end:{line:310,column:7}},"98":{start:{line:306,column:6},end:{line:309,column:9}},"99":{start:{line:307,column:8},end:{line:307,column:15}},"100":{start:{line:308,column:8},end:{line:308,column:30}},"101":{start:{line:322,column:4},end:{line:327,column:7}},"102":{start:{line:323,column:6},end:{line:326,column:9}},"103":{start:{line:324,column:8},end:{line:324,column:15}},"104":{start:{line:325,column:8},end:{line:325,column:30}},"105":{start:{line:339,column:21},end:{line:339,column:57}},"106":{start:{line:341,column:4},end:{line:357,column:5}},"107":{start:{line:342,column:18},end:{line:342,column:47}},"108":{start:{line:344,column:8},end:{line:346,column:28}},"109":{start:{line:348,column:6},end:{line:351,column:9}},"110":{start:{line:352,column:6},end:{line:352,column:47}},"111":{start:{line:353,column:6},end:{line:353,column:38}},"112":{start:{line:354,column:6},end:{line:354,column:35}},"113":{start:{line:355,column:6},end:{line:355,column:48}},"114":{start:{line:356,column:6},end:{line:356,column:46}},"115":{start:{line:359,column:4},end:{line:359,column:40}},"116":{start:{line:361,column:4},end:{line:361,column:30}},"117":{start:{line:362,column:4},end:{line:362,column:42}},"118":{start:{line:362,column:13},end:{line:362,column:42}},"119":{start:{line:364,column:4},end:{line:388,column:7}},"120":{start:{line:365,column:18},end:{line:365,column:39}},"121":{start:{line:367,column:6},end:{line:372,column:7}},"122":{start:{line:368,column:8},end:{line:368,column:30}},"123":{start:{line:369,column:8},end:{line:369,column:29}},"124":{start:{line:370,column:8},end:{line:370,column:22}},"125":{start:{line:371,column:8},end:{line:371,column:15}},"126":{start:{line:374,column:19},end:{line:377,column:7}},"127":{start:{line:379,column:6},end:{line:385,column:7}},"128":{start:{line:380,column:8},end:{line:380,column:30}},"129":{start:{line:381,column:8},end:{line:381,column:29}},"130":{start:{line:383,column:8},end:{line:383,column:40}},"131":{start:{line:384,column:8},end:{line:384,column:37}},"132":{start:{line:387,column:6},end:{line:387,column:27}},"133":{start:{line:400,column:21},end:{line:400,column:57}},"134":{start:{line:402,column:4},end:{line:425,column:5}},"135":{start:{line:403,column:18},end:{line:403,column:47}},"136":{start:{line:405,column:8},end:{line:407,column:28}},"137":{start:{line:409,column:6},end:{line:412,column:9}},"138":{start:{line:414,column:6},end:{line:414,column:38}},"139":{start:{line:415,column:6},end:{line:415,column:35}},"140":{start:{line:423,column:6},end:{line:423,column:38}},"141":{start:{line:424,column:6},end:{line:424,column:46}},"142":{start:{line:427,column:4},end:{line:427,column:40}},"143":{start:{line:429,column:4},end:{line:429,column:30}},"144":{start:{line:430,column:4},end:{line:460,column:7}},"145":{start:{line:431,column:6},end:{line:436,column:7}},"146":{start:{line:435,column:8},end:{line:435,column:15}},"147":{start:{line:438,column:17},end:{line:441,column:7}},"148":{start:{line:443,column:6},end:{line:443,column:53}},"149":{start:{line:443,column:15},end:{line:443,column:53}},"150":{start:{line:449,column:6},end:{line:449,column:38}},"151":{start:{line:451,column:6},end:{line:457,column:7}},"152":{start:{line:452,column:8},end:{line:452,column:30}},"153":{start:{line:453,column:8},end:{line:453,column:29}},"154":{start:{line:455,column:8},end:{line:455,column:40}},"155":{start:{line:456,column:8},end:{line:456,column:37}},"156":{start:{line:459,column:6},end:{line:459,column:27}},"157":{start:{line:464,column:0},end:{line:464,column:35}},"158":{start:{line:473,column:2},end:{line:473,column:29}},"159":{start:{line:474,column:2},end:{line:474,column:37}},"160":{start:{line:484,column:2},end:{line:484,column:37}},"161":{start:{line:486,column:2},end:{line:492,column:3}},"162":{start:{line:490,column:4},end:{line:490,column:31}},"163":{start:{line:491,column:4},end:{line:491,column:11}},"164":{start:{line:494,column:2},end:{line:494,column:61}},"165":{start:{line:495,column:2},end:{line:495,column:35}},"166":{start:{line:496,column:2},end:{line:496,column:45}},"167":{start:{line:497,column:2},end:{line:497,column:15}},"168":{start:{line:511,column:2},end:{line:511,column:43}},"169":{start:{line:512,column:2},end:{line:512,column:26}},"170":{start:{line:513,column:2},end:{line:513,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:53,column:2},end:{line:53,column:3}},loc:{start:{line:53,column:45},end:{line:71,column:3}},line:53},"1":{name:"(anonymous_1)",decl:{start:{line:76,column:2},end:{line:76,column:3}},loc:{start:{line:76,column:29},end:{line:78,column:3}},line:76},"2":{name:"(anonymous_2)",decl:{start:{line:86,column:2},end:{line:86,column:3}},loc:{start:{line:86,column:10},end:{line:105,column:3}},line:86},"3":{name:"(anonymous_3)",decl:{start:{line:114,column:2},end:{line:114,column:3}},loc:{start:{line:114,column:25},end:{line:122,column:3}},line:114},"4":{name:"(anonymous_4)",decl:{start:{line:129,column:2},end:{line:129,column:3}},loc:{start:{line:129,column:12},end:{line:149,column:3}},line:129},"5":{name:"(anonymous_5)",decl:{start:{line:158,column:2},end:{line:158,column:3}},loc:{start:{line:158,column:25},end:{line:200,column:3}},line:158},"6":{name:"(anonymous_6)",decl:{start:{line:160,column:33},end:{line:160,column:34}},loc:{start:{line:160,column:45},end:{line:175,column:5}},line:160},"7":{name:"(anonymous_7)",decl:{start:{line:209,column:2},end:{line:209,column:3}},loc:{start:{line:209,column:27},end:{line:234,column:3}},line:209},"8":{name:"(anonymous_8)",decl:{start:{line:243,column:2},end:{line:243,column:3}},loc:{start:{line:243,column:34},end:{line:294,column:3}},line:243},"9":{name:"(anonymous_9)",decl:{start:{line:244,column:27},end:{line:244,column:28}},loc:{start:{line:244,column:39},end:{line:291,column:5}},line:244},"10":{name:"(anonymous_10)",decl:{start:{line:245,column:34},end:{line:245,column:35}},loc:{start:{line:245,column:43},end:{line:290,column:7}},line:245},"11":{name:"(anonymous_11)",decl:{start:{line:304,column:2},end:{line:304,column:3}},loc:{start:{line:304,column:34},end:{line:311,column:3}},line:304},"12":{name:"(anonymous_12)",decl:{start:{line:305,column:20},end:{line:305,column:21}},loc:{start:{line:305,column:30},end:{line:310,column:5}},line:305},"13":{name:"(anonymous_13)",decl:{start:{line:306,column:34},end:{line:306,column:35}},loc:{start:{line:306,column:51},end:{line:309,column:7}},line:306},"14":{name:"(anonymous_14)",decl:{start:{line:321,column:2},end:{line:321,column:3}},loc:{start:{line:321,column:32},end:{line:328,column:3}},line:321},"15":{name:"(anonymous_15)",decl:{start:{line:322,column:20},end:{line:322,column:21}},loc:{start:{line:322,column:30},end:{line:327,column:5}},line:322},"16":{name:"(anonymous_16)",decl:{start:{line:323,column:32},end:{line:323,column:33}},loc:{start:{line:323,column:49},end:{line:326,column:7}},line:323},"17":{name:"(anonymous_17)",decl:{start:{line:338,column:2},end:{line:338,column:3}},loc:{start:{line:338,column:35},end:{line:389,column:3}},line:338},"18":{name:"(anonymous_18)",decl:{start:{line:364,column:24},end:{line:364,column:25}},loc:{start:{line:364,column:30},end:{line:388,column:5}},line:364},"19":{name:"(anonymous_19)",decl:{start:{line:399,column:2},end:{line:399,column:3}},loc:{start:{line:399,column:33},end:{line:461,column:3}},line:399},"20":{name:"(anonymous_20)",decl:{start:{line:430,column:43},end:{line:430,column:44}},loc:{start:{line:430,column:49},end:{line:460,column:5}},line:430},"21":{name:"deflateOnData",decl:{start:{line:472,column:9},end:{line:472,column:22}},loc:{start:{line:472,column:30},end:{line:475,column:1}},line:472},"22":{name:"inflateOnData",decl:{start:{line:483,column:9},end:{line:483,column:22}},loc:{start:{line:483,column:30},end:{line:498,column:1}},line:483},"23":{name:"inflateOnError",decl:{start:{line:506,column:9},end:{line:506,column:23}},loc:{start:{line:506,column:29},end:{line:514,column:1}},line:506}},branchMap:{"0":{loc:{start:{line:55,column:20},end:{line:55,column:33}},type:"binary-expr",locations:[{start:{line:55,column:20},end:{line:55,column:27}},{start:{line:55,column:31},end:{line:55,column:33}}],line:55},"1":{loc:{start:{line:57,column:6},end:{line:57,column:76}},type:"cond-expr",locations:[{start:{line:57,column:46},end:{line:57,column:69}},{start:{line:57,column:72},end:{line:57,column:76}}],line:57},"2":{loc:{start:{line:64,column:4},end:{line:70,column:5}},type:"if",locations:[{start:{line:64,column:4},end:{line:70,column:5}},{start:{line:64,column:4},end:{line:70,column:5}}],line:64},"3":{loc:{start:{line:66,column:8},end:{line:68,column:14}},type:"cond-expr",locations:[{start:{line:67,column:12},end:{line:67,column:42}},{start:{line:68,column:12},end:{line:68,column:14}}],line:66},"4":{loc:{start:{line:89,column:4},end:{line:91,column:5}},type:"if",locations:[{start:{line:89,column:4},end:{line:91,column:5}},{start:{line:89,column:4},end:{line:91,column:5}}],line:89},"5":{loc:{start:{line:92,column:4},end:{line:94,column:5}},type:"if",locations:[{start:{line:92,column:4},end:{line:94,column:5}},{start:{line:92,column:4},end:{line:94,column:5}}],line:92},"6":{loc:{start:{line:95,column:4},end:{line:97,column:5}},type:"if",locations:[{start:{line:95,column:4},end:{line:97,column:5}},{start:{line:95,column:4},end:{line:97,column:5}}],line:95},"7":{loc:{start:{line:98,column:4},end:{line:102,column:5}},type:"if",locations:[{start:{line:98,column:4},end:{line:102,column:5}},{start:{line:98,column:4},end:{line:102,column:5}}],line:98},"8":{loc:{start:{line:100,column:11},end:{line:102,column:5}},type:"if",locations:[{start:{line:100,column:11},end:{line:102,column:5}},{start:{line:100,column:11},end:{line:102,column:5}}],line:100},"9":{loc:{start:{line:117,column:18},end:{line:119,column:43}},type:"cond-expr",locations:[{start:{line:118,column:8},end:{line:118,column:43}},{start:{line:119,column:8},end:{line:119,column:43}}],line:117},"10":{loc:{start:{line:130,column:4},end:{line:133,column:5}},type:"if",locations:[{start:{line:130,column:4},end:{line:133,column:5}},{start:{line:130,column:4},end:{line:133,column:5}}],line:130},"11":{loc:{start:{line:135,column:4},end:{line:148,column:5}},type:"if",locations:[{start:{line:135,column:4},end:{line:148,column:5}},{start:{line:135,column:4},end:{line:148,column:5}}],line:135},"12":{loc:{start:{line:141,column:6},end:{line:147,column:7}},type:"if",locations:[{start:{line:141,column:6},end:{line:147,column:7}},{start:{line:141,column:6},end:{line:147,column:7}}],line:141},"13":{loc:{start:{line:161,column:6},end:{line:172,column:7}},type:"if",locations:[{start:{line:161,column:6},end:{line:172,column:7}},{start:{line:161,column:6},end:{line:172,column:7}}],line:161},"14":{loc:{start:{line:162,column:8},end:{line:169,column:41}},type:"binary-expr",locations:[{start:{line:162,column:9},end:{line:162,column:47}},{start:{line:163,column:10},end:{line:163,column:43}},{start:{line:164,column:9},end:{line:164,column:38}},{start:{line:165,column:11},end:{line:165,column:45}},{start:{line:166,column:13},end:{line:166,column:57}},{start:{line:167,column:14},end:{line:167,column:70}},{start:{line:168,column:9},end:{line:168,column:53}},{start:{line:169,column:10},end:{line:169,column:40}}],line:162},"15":{loc:{start:{line:177,column:4},end:{line:179,column:5}},type:"if",locations:[{start:{line:177,column:4},end:{line:179,column:5}},{start:{line:177,column:4},end:{line:179,column:5}}],line:177},"16":{loc:{start:{line:181,column:4},end:{line:183,column:5}},type:"if",locations:[{start:{line:181,column:4},end:{line:183,column:5}},{start:{line:181,column:4},end:{line:183,column:5}}],line:181},"17":{loc:{start:{line:184,column:4},end:{line:186,column:5}},type:"if",locations:[{start:{line:184,column:4},end:{line:186,column:5}},{start:{line:184,column:4},end:{line:186,column:5}}],line:184},"18":{loc:{start:{line:187,column:4},end:{line:189,column:5}},type:"if",locations:[{start:{line:187,column:4},end:{line:189,column:5}},{start:{line:187,column:4},end:{line:189,column:5}}],line:187},"19":{loc:{start:{line:190,column:4},end:{line:197,column:5}},type:"if",locations:[{start:{line:190,column:4},end:{line:197,column:5}},{start:{line:190,column:4},end:{line:197,column:5}}],line:190},"20":{loc:{start:{line:192,column:11},end:{line:197,column:5}},type:"if",locations:[{start:{line:192,column:11},end:{line:197,column:5}},{start:{line:192,column:11},end:{line:197,column:5}}],line:192},"21":{loc:{start:{line:193,column:6},end:{line:194,column:40}},type:"binary-expr",locations:[{start:{line:193,column:6},end:{line:193,column:46}},{start:{line:194,column:6},end:{line:194,column:40}}],line:193},"22":{loc:{start:{line:212,column:4},end:{line:217,column:5}},type:"if",locations:[{start:{line:212,column:4},end:{line:217,column:5}},{start:{line:212,column:4},end:{line:217,column:5}}],line:212},"23":{loc:{start:{line:213,column:6},end:{line:214,column:39}},type:"binary-expr",locations:[{start:{line:213,column:6},end:{line:213,column:53}},{start:{line:214,column:6},end:{line:214,column:39}}],line:213},"24":{loc:{start:{line:219,column:4},end:{line:231,column:5}},type:"if",locations:[{start:{line:219,column:4},end:{line:231,column:5}},{start:{line:219,column:4},end:{line:231,column:5}}],line:219},"25":{loc:{start:{line:220,column:6},end:{line:222,column:7}},type:"if",locations:[{start:{line:220,column:6},end:{line:222,column:7}},{start:{line:220,column:6},end:{line:222,column:7}}],line:220},"26":{loc:{start:{line:223,column:11},end:{line:231,column:5}},type:"if",locations:[{start:{line:223,column:11},end:{line:231,column:5}},{start:{line:223,column:11},end:{line:231,column:5}}],line:223},"27":{loc:{start:{line:224,column:6},end:{line:226,column:74}},type:"binary-expr",locations:[{start:{line:224,column:6},end:{line:224,column:49}},{start:{line:225,column:7},end:{line:225,column:60}},{start:{line:226,column:8},end:{line:226,column:73}}],line:224},"28":{loc:{start:{line:248,column:8},end:{line:250,column:9}},type:"if",locations:[{start:{line:248,column:8},end:{line:250,column:9}},{start:{line:248,column:8},end:{line:250,column:9}}],line:248},"29":{loc:{start:{line:254,column:8},end:{line:287,column:9}},type:"if",locations:[{start:{line:254,column:8},end:{line:287,column:9}},{start:{line:254,column:8},end:{line:287,column:9}}],line:254},"30":{loc:{start:{line:255,column:10},end:{line:267,column:11}},type:"if",locations:[{start:{line:255,column:10},end:{line:267,column:11}},{start:{line:255,column:10},end:{line:267,column:11}}],line:255},"31":{loc:{start:{line:257,column:12},end:{line:261,column:13}},type:"if",locations:[{start:{line:257,column:12},end:{line:261,column:13}},{start:{line:257,column:12},end:{line:261,column:13}}],line:257},"32":{loc:{start:{line:257,column:16},end:{line:257,column:61}},type:"binary-expr",locations:[{start:{line:257,column:16},end:{line:257,column:38}},{start:{line:257,column:42},end:{line:257,column:49}},{start:{line:257,column:53},end:{line:257,column:61}}],line:257},"33":{loc:{start:{line:263,column:17},end:{line:267,column:11}},type:"if",locations:[{start:{line:263,column:17},end:{line:267,column:11}},{start:{line:263,column:17},end:{line:267,column:11}}],line:263},"34":{loc:{start:{line:268,column:15},end:{line:287,column:9}},type:"if",locations:[{start:{line:268,column:15},end:{line:287,column:9}},{start:{line:268,column:15},end:{line:287,column:9}}],line:268},"35":{loc:{start:{line:270,column:10},end:{line:274,column:11}},type:"if",locations:[{start:{line:270,column:10},end:{line:274,column:11}},{start:{line:270,column:10},end:{line:274,column:11}}],line:270},"36":{loc:{start:{line:270,column:14},end:{line:270,column:59}},type:"binary-expr",locations:[{start:{line:270,column:14},end:{line:270,column:36}},{start:{line:270,column:40},end:{line:270,column:47}},{start:{line:270,column:51},end:{line:270,column:59}}],line:270},"37":{loc:{start:{line:276,column:15},end:{line:287,column:9}},type:"if",locations:[{start:{line:276,column:15},end:{line:287,column:9}},{start:{line:276,column:15},end:{line:287,column:9}}],line:276},"38":{loc:{start:{line:277,column:10},end:{line:278,column:46}},type:"binary-expr",locations:[{start:{line:277,column:10},end:{line:277,column:46}},{start:{line:278,column:10},end:{line:278,column:46}}],line:277},"39":{loc:{start:{line:280,column:10},end:{line:284,column:11}},type:"if",locations:[{start:{line:280,column:10},end:{line:284,column:11}},{start:{line:280,column:10},end:{line:284,column:11}}],line:280},"40":{loc:{start:{line:339,column:21},end:{line:339,column:57}},type:"cond-expr",locations:[{start:{line:339,column:38},end:{line:339,column:46}},{start:{line:339,column:49},end:{line:339,column:57}}],line:339},"41":{loc:{start:{line:341,column:4},end:{line:357,column:5}},type:"if",locations:[{start:{line:341,column:4},end:{line:357,column:5}},{start:{line:341,column:4},end:{line:357,column:5}}],line:341},"42":{loc:{start:{line:344,column:8},end:{line:346,column:28}},type:"cond-expr",locations:[{start:{line:345,column:12},end:{line:345,column:37}},{start:{line:346,column:12},end:{line:346,column:28}}],line:344},"43":{loc:{start:{line:362,column:4},end:{line:362,column:42}},type:"if",locations:[{start:{line:362,column:4},end:{line:362,column:42}},{start:{line:362,column:4},end:{line:362,column:42}}],line:362},"44":{loc:{start:{line:367,column:6},end:{line:372,column:7}},type:"if",locations:[{start:{line:367,column:6},end:{line:372,column:7}},{start:{line:367,column:6},end:{line:372,column:7}}],line:367},"45":{loc:{start:{line:379,column:6},end:{line:385,column:7}},type:"if",locations:[{start:{line:379,column:6},end:{line:385,column:7}},{start:{line:379,column:6},end:{line:385,column:7}}],line:379},"46":{loc:{start:{line:379,column:10},end:{line:379,column:63}},type:"binary-expr",locations:[{start:{line:379,column:10},end:{line:379,column:13}},{start:{line:379,column:17},end:{line:379,column:63}}],line:379},"47":{loc:{start:{line:400,column:21},end:{line:400,column:57}},type:"cond-expr",locations:[{start:{line:400,column:38},end:{line:400,column:46}},{start:{line:400,column:49},end:{line:400,column:57}}],line:400},"48":{loc:{start:{line:402,column:4},end:{line:425,column:5}},type:"if",locations:[{start:{line:402,column:4},end:{line:425,column:5}},{start:{line:402,column:4},end:{line:425,column:5}}],line:402},"49":{loc:{start:{line:405,column:8},end:{line:407,column:28}},type:"cond-expr",locations:[{start:{line:406,column:12},end:{line:406,column:37}},{start:{line:407,column:12},end:{line:407,column:28}}],line:405},"50":{loc:{start:{line:431,column:6},end:{line:436,column:7}},type:"if",locations:[{start:{line:431,column:6},end:{line:436,column:7}},{start:{line:431,column:6},end:{line:436,column:7}}],line:431},"51":{loc:{start:{line:443,column:6},end:{line:443,column:53}},type:"if",locations:[{start:{line:443,column:6},end:{line:443,column:53}},{start:{line:443,column:6},end:{line:443,column:53}}],line:443},"52":{loc:{start:{line:451,column:6},end:{line:457,column:7}},type:"if",locations:[{start:{line:451,column:6},end:{line:457,column:7}},{start:{line:451,column:6},end:{line:457,column:7}}],line:451},"53":{loc:{start:{line:451,column:10},end:{line:451,column:63}},type:"binary-expr",locations:[{start:{line:451,column:10},end:{line:451,column:13}},{start:{line:451,column:17},end:{line:451,column:63}}],line:451},"54":{loc:{start:{line:486,column:2},end:{line:492,column:3}},type:"if",locations:[{start:{line:486,column:2},end:{line:492,column:3}},{start:{line:486,column:2},end:{line:492,column:3}}],line:486},"55":{loc:{start:{line:487,column:4},end:{line:488,column:62}},type:"binary-expr",locations:[{start:{line:487,column:4},end:{line:487,column:44}},{start:{line:488,column:4},end:{line:488,column:62}}],line:487}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0,0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"32930b894766b488b0e5de8cd5b346c4f9e3539f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_b1mxuecj0=function(){return actualCoverage;};}return actualCoverage;}cov_b1mxuecj0();const zlib=(cov_b1mxuecj0().s[0]++,require('zlib'));const bufferUtil=(cov_b1mxuecj0().s[1]++,require('./buffer-util'));const Limiter=(cov_b1mxuecj0().s[2]++,require('./limiter'));const{kStatusCode,NOOP}=(cov_b1mxuecj0().s[3]++,require('./constants'));const TRAILER=(cov_b1mxuecj0().s[4]++,Buffer.from([0x00,0x00,0xff,0xff]));const kPerMessageDeflate=(cov_b1mxuecj0().s[5]++,Symbol('permessage-deflate'));const kTotalLength=(cov_b1mxuecj0().s[6]++,Symbol('total-length'));const kCallback=(cov_b1mxuecj0().s[7]++,Symbol('callback'));const kBuffers=(cov_b1mxuecj0().s[8]++,Symbol('buffers'));const kError=(cov_b1mxuecj0().s[9]++,Symbol('error'));//
// We limit zlib concurrency, which prevents severe memory fragmentation
// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913
// and https://github.com/websockets/ws/issues/1202
//
// Intentionally global; it's the global thread pool that's an issue.
//
let zlibLimiter;/**
 * permessage-deflate implementation.
 */class PerMessageDeflate{/**
   * Creates a PerMessageDeflate instance.
   *
   * @param {Object} [options] Configuration options
   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept
   *     disabling of server context takeover
   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/
   *     acknowledge disabling of client context takeover
   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the
   *     use of a custom server window size
   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support
   *     for, or request, a custom client window size
   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on
   *     deflate
   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on
   *     inflate
   * @param {Number} [options.threshold=1024] Size (in bytes) below which
   *     messages should not be compressed
   * @param {Number} [options.concurrencyLimit=10] The number of concurrent
   *     calls to zlib
   * @param {Boolean} [isServer=false] Create the instance in either server or
   *     client mode
   * @param {Number} [maxPayload=0] The maximum allowed message length
   */constructor(options,isServer,maxPayload){cov_b1mxuecj0().f[0]++;cov_b1mxuecj0().s[10]++;this._maxPayload=maxPayload|0;cov_b1mxuecj0().s[11]++;this._options=(cov_b1mxuecj0().b[0][0]++,options)||(cov_b1mxuecj0().b[0][1]++,{});cov_b1mxuecj0().s[12]++;this._threshold=this._options.threshold!==undefined?(cov_b1mxuecj0().b[1][0]++,this._options.threshold):(cov_b1mxuecj0().b[1][1]++,1024);cov_b1mxuecj0().s[13]++;this._isServer=!!isServer;cov_b1mxuecj0().s[14]++;this._deflate=null;cov_b1mxuecj0().s[15]++;this._inflate=null;cov_b1mxuecj0().s[16]++;this.params=null;cov_b1mxuecj0().s[17]++;if(!zlibLimiter){cov_b1mxuecj0().b[2][0]++;const concurrency=(cov_b1mxuecj0().s[18]++,this._options.concurrencyLimit!==undefined?(cov_b1mxuecj0().b[3][0]++,this._options.concurrencyLimit):(cov_b1mxuecj0().b[3][1]++,10));cov_b1mxuecj0().s[19]++;zlibLimiter=new Limiter(concurrency);}else{cov_b1mxuecj0().b[2][1]++;}}/**
   * @type {String}
   */static get extensionName(){cov_b1mxuecj0().f[1]++;cov_b1mxuecj0().s[20]++;return'permessage-deflate';}/**
   * Create an extension negotiation offer.
   *
   * @return {Object} Extension parameters
   * @public
   */offer(){cov_b1mxuecj0().f[2]++;const params=(cov_b1mxuecj0().s[21]++,{});cov_b1mxuecj0().s[22]++;if(this._options.serverNoContextTakeover){cov_b1mxuecj0().b[4][0]++;cov_b1mxuecj0().s[23]++;params.server_no_context_takeover=true;}else{cov_b1mxuecj0().b[4][1]++;}cov_b1mxuecj0().s[24]++;if(this._options.clientNoContextTakeover){cov_b1mxuecj0().b[5][0]++;cov_b1mxuecj0().s[25]++;params.client_no_context_takeover=true;}else{cov_b1mxuecj0().b[5][1]++;}cov_b1mxuecj0().s[26]++;if(this._options.serverMaxWindowBits){cov_b1mxuecj0().b[6][0]++;cov_b1mxuecj0().s[27]++;params.server_max_window_bits=this._options.serverMaxWindowBits;}else{cov_b1mxuecj0().b[6][1]++;}cov_b1mxuecj0().s[28]++;if(this._options.clientMaxWindowBits){cov_b1mxuecj0().b[7][0]++;cov_b1mxuecj0().s[29]++;params.client_max_window_bits=this._options.clientMaxWindowBits;}else{cov_b1mxuecj0().b[7][1]++;cov_b1mxuecj0().s[30]++;if(this._options.clientMaxWindowBits==null){cov_b1mxuecj0().b[8][0]++;cov_b1mxuecj0().s[31]++;params.client_max_window_bits=true;}else{cov_b1mxuecj0().b[8][1]++;}}cov_b1mxuecj0().s[32]++;return params;}/**
   * Accept an extension negotiation offer/response.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Object} Accepted configuration
   * @public
   */accept(configurations){cov_b1mxuecj0().f[3]++;cov_b1mxuecj0().s[33]++;configurations=this.normalizeParams(configurations);cov_b1mxuecj0().s[34]++;this.params=this._isServer?(cov_b1mxuecj0().b[9][0]++,this.acceptAsServer(configurations)):(cov_b1mxuecj0().b[9][1]++,this.acceptAsClient(configurations));cov_b1mxuecj0().s[35]++;return this.params;}/**
   * Releases all resources used by the extension.
   *
   * @public
   */cleanup(){cov_b1mxuecj0().f[4]++;cov_b1mxuecj0().s[36]++;if(this._inflate){cov_b1mxuecj0().b[10][0]++;cov_b1mxuecj0().s[37]++;this._inflate.close();cov_b1mxuecj0().s[38]++;this._inflate=null;}else{cov_b1mxuecj0().b[10][1]++;}cov_b1mxuecj0().s[39]++;if(this._deflate){cov_b1mxuecj0().b[11][0]++;const callback=(cov_b1mxuecj0().s[40]++,this._deflate[kCallback]);cov_b1mxuecj0().s[41]++;this._deflate.close();cov_b1mxuecj0().s[42]++;this._deflate=null;cov_b1mxuecj0().s[43]++;if(callback){cov_b1mxuecj0().b[12][0]++;cov_b1mxuecj0().s[44]++;callback(new Error('The deflate stream was closed while data was being processed'));}else{cov_b1mxuecj0().b[12][1]++;}}else{cov_b1mxuecj0().b[11][1]++;}}/**
   *  Accept an extension negotiation offer.
   *
   * @param {Array} offers The extension negotiation offers
   * @return {Object} Accepted configuration
   * @private
   */acceptAsServer(offers){cov_b1mxuecj0().f[5]++;const opts=(cov_b1mxuecj0().s[45]++,this._options);const accepted=(cov_b1mxuecj0().s[46]++,offers.find(params=>{cov_b1mxuecj0().f[6]++;cov_b1mxuecj0().s[47]++;if((cov_b1mxuecj0().b[14][0]++,opts.serverNoContextTakeover===false)&&(cov_b1mxuecj0().b[14][1]++,params.server_no_context_takeover)||(cov_b1mxuecj0().b[14][2]++,params.server_max_window_bits)&&((cov_b1mxuecj0().b[14][3]++,opts.serverMaxWindowBits===false)||(cov_b1mxuecj0().b[14][4]++,typeof opts.serverMaxWindowBits==='number')&&(cov_b1mxuecj0().b[14][5]++,opts.serverMaxWindowBits>params.server_max_window_bits))||(cov_b1mxuecj0().b[14][6]++,typeof opts.clientMaxWindowBits==='number')&&(cov_b1mxuecj0().b[14][7]++,!params.client_max_window_bits)){cov_b1mxuecj0().b[13][0]++;cov_b1mxuecj0().s[48]++;return false;}else{cov_b1mxuecj0().b[13][1]++;}cov_b1mxuecj0().s[49]++;return true;}));cov_b1mxuecj0().s[50]++;if(!accepted){cov_b1mxuecj0().b[15][0]++;cov_b1mxuecj0().s[51]++;throw new Error('None of the extension offers can be accepted');}else{cov_b1mxuecj0().b[15][1]++;}cov_b1mxuecj0().s[52]++;if(opts.serverNoContextTakeover){cov_b1mxuecj0().b[16][0]++;cov_b1mxuecj0().s[53]++;accepted.server_no_context_takeover=true;}else{cov_b1mxuecj0().b[16][1]++;}cov_b1mxuecj0().s[54]++;if(opts.clientNoContextTakeover){cov_b1mxuecj0().b[17][0]++;cov_b1mxuecj0().s[55]++;accepted.client_no_context_takeover=true;}else{cov_b1mxuecj0().b[17][1]++;}cov_b1mxuecj0().s[56]++;if(typeof opts.serverMaxWindowBits==='number'){cov_b1mxuecj0().b[18][0]++;cov_b1mxuecj0().s[57]++;accepted.server_max_window_bits=opts.serverMaxWindowBits;}else{cov_b1mxuecj0().b[18][1]++;}cov_b1mxuecj0().s[58]++;if(typeof opts.clientMaxWindowBits==='number'){cov_b1mxuecj0().b[19][0]++;cov_b1mxuecj0().s[59]++;accepted.client_max_window_bits=opts.clientMaxWindowBits;}else{cov_b1mxuecj0().b[19][1]++;cov_b1mxuecj0().s[60]++;if((cov_b1mxuecj0().b[21][0]++,accepted.client_max_window_bits===true)||(cov_b1mxuecj0().b[21][1]++,opts.clientMaxWindowBits===false)){cov_b1mxuecj0().b[20][0]++;cov_b1mxuecj0().s[61]++;delete accepted.client_max_window_bits;}else{cov_b1mxuecj0().b[20][1]++;}}cov_b1mxuecj0().s[62]++;return accepted;}/**
   * Accept the extension negotiation response.
   *
   * @param {Array} response The extension negotiation response
   * @return {Object} Accepted configuration
   * @private
   */acceptAsClient(response){cov_b1mxuecj0().f[7]++;const params=(cov_b1mxuecj0().s[63]++,response[0]);cov_b1mxuecj0().s[64]++;if((cov_b1mxuecj0().b[23][0]++,this._options.clientNoContextTakeover===false)&&(cov_b1mxuecj0().b[23][1]++,params.client_no_context_takeover)){cov_b1mxuecj0().b[22][0]++;cov_b1mxuecj0().s[65]++;throw new Error('Unexpected parameter "client_no_context_takeover"');}else{cov_b1mxuecj0().b[22][1]++;}cov_b1mxuecj0().s[66]++;if(!params.client_max_window_bits){cov_b1mxuecj0().b[24][0]++;cov_b1mxuecj0().s[67]++;if(typeof this._options.clientMaxWindowBits==='number'){cov_b1mxuecj0().b[25][0]++;cov_b1mxuecj0().s[68]++;params.client_max_window_bits=this._options.clientMaxWindowBits;}else{cov_b1mxuecj0().b[25][1]++;}}else{cov_b1mxuecj0().b[24][1]++;cov_b1mxuecj0().s[69]++;if((cov_b1mxuecj0().b[27][0]++,this._options.clientMaxWindowBits===false)||(cov_b1mxuecj0().b[27][1]++,typeof this._options.clientMaxWindowBits==='number')&&(cov_b1mxuecj0().b[27][2]++,params.client_max_window_bits>this._options.clientMaxWindowBits)){cov_b1mxuecj0().b[26][0]++;cov_b1mxuecj0().s[70]++;throw new Error('Unexpected or invalid parameter "client_max_window_bits"');}else{cov_b1mxuecj0().b[26][1]++;}}cov_b1mxuecj0().s[71]++;return params;}/**
   * Normalize parameters.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Array} The offers/response with normalized parameters
   * @private
   */normalizeParams(configurations){cov_b1mxuecj0().f[8]++;cov_b1mxuecj0().s[72]++;configurations.forEach(params=>{cov_b1mxuecj0().f[9]++;cov_b1mxuecj0().s[73]++;Object.keys(params).forEach(key=>{cov_b1mxuecj0().f[10]++;let value=(cov_b1mxuecj0().s[74]++,params[key]);cov_b1mxuecj0().s[75]++;if(value.length>1){cov_b1mxuecj0().b[28][0]++;cov_b1mxuecj0().s[76]++;throw new Error(`Parameter "${key}" must have only a single value`);}else{cov_b1mxuecj0().b[28][1]++;}cov_b1mxuecj0().s[77]++;value=value[0];cov_b1mxuecj0().s[78]++;if(key==='client_max_window_bits'){cov_b1mxuecj0().b[29][0]++;cov_b1mxuecj0().s[79]++;if(value!==true){cov_b1mxuecj0().b[30][0]++;const num=(cov_b1mxuecj0().s[80]++,+value);cov_b1mxuecj0().s[81]++;if((cov_b1mxuecj0().b[32][0]++,!Number.isInteger(num))||(cov_b1mxuecj0().b[32][1]++,num<8)||(cov_b1mxuecj0().b[32][2]++,num>15)){cov_b1mxuecj0().b[31][0]++;cov_b1mxuecj0().s[82]++;throw new TypeError(`Invalid value for parameter "${key}": ${value}`);}else{cov_b1mxuecj0().b[31][1]++;}cov_b1mxuecj0().s[83]++;value=num;}else{cov_b1mxuecj0().b[30][1]++;cov_b1mxuecj0().s[84]++;if(!this._isServer){cov_b1mxuecj0().b[33][0]++;cov_b1mxuecj0().s[85]++;throw new TypeError(`Invalid value for parameter "${key}": ${value}`);}else{cov_b1mxuecj0().b[33][1]++;}}}else{cov_b1mxuecj0().b[29][1]++;cov_b1mxuecj0().s[86]++;if(key==='server_max_window_bits'){cov_b1mxuecj0().b[34][0]++;const num=(cov_b1mxuecj0().s[87]++,+value);cov_b1mxuecj0().s[88]++;if((cov_b1mxuecj0().b[36][0]++,!Number.isInteger(num))||(cov_b1mxuecj0().b[36][1]++,num<8)||(cov_b1mxuecj0().b[36][2]++,num>15)){cov_b1mxuecj0().b[35][0]++;cov_b1mxuecj0().s[89]++;throw new TypeError(`Invalid value for parameter "${key}": ${value}`);}else{cov_b1mxuecj0().b[35][1]++;}cov_b1mxuecj0().s[90]++;value=num;}else{cov_b1mxuecj0().b[34][1]++;cov_b1mxuecj0().s[91]++;if((cov_b1mxuecj0().b[38][0]++,key==='client_no_context_takeover')||(cov_b1mxuecj0().b[38][1]++,key==='server_no_context_takeover')){cov_b1mxuecj0().b[37][0]++;cov_b1mxuecj0().s[92]++;if(value!==true){cov_b1mxuecj0().b[39][0]++;cov_b1mxuecj0().s[93]++;throw new TypeError(`Invalid value for parameter "${key}": ${value}`);}else{cov_b1mxuecj0().b[39][1]++;}}else{cov_b1mxuecj0().b[37][1]++;cov_b1mxuecj0().s[94]++;throw new Error(`Unknown parameter "${key}"`);}}}cov_b1mxuecj0().s[95]++;params[key]=value;});});cov_b1mxuecj0().s[96]++;return configurations;}/**
   * Decompress data. Concurrency limited.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */decompress(data,fin,callback){cov_b1mxuecj0().f[11]++;cov_b1mxuecj0().s[97]++;zlibLimiter.add(done=>{cov_b1mxuecj0().f[12]++;cov_b1mxuecj0().s[98]++;this._decompress(data,fin,(err,result)=>{cov_b1mxuecj0().f[13]++;cov_b1mxuecj0().s[99]++;done();cov_b1mxuecj0().s[100]++;callback(err,result);});});}/**
   * Compress data. Concurrency limited.
   *
   * @param {Buffer} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */compress(data,fin,callback){cov_b1mxuecj0().f[14]++;cov_b1mxuecj0().s[101]++;zlibLimiter.add(done=>{cov_b1mxuecj0().f[15]++;cov_b1mxuecj0().s[102]++;this._compress(data,fin,(err,result)=>{cov_b1mxuecj0().f[16]++;cov_b1mxuecj0().s[103]++;done();cov_b1mxuecj0().s[104]++;callback(err,result);});});}/**
   * Decompress data.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */_decompress(data,fin,callback){cov_b1mxuecj0().f[17]++;const endpoint=(cov_b1mxuecj0().s[105]++,this._isServer?(cov_b1mxuecj0().b[40][0]++,'client'):(cov_b1mxuecj0().b[40][1]++,'server'));cov_b1mxuecj0().s[106]++;if(!this._inflate){cov_b1mxuecj0().b[41][0]++;const key=(cov_b1mxuecj0().s[107]++,`${endpoint}_max_window_bits`);const windowBits=(cov_b1mxuecj0().s[108]++,typeof this.params[key]!=='number'?(cov_b1mxuecj0().b[42][0]++,zlib.Z_DEFAULT_WINDOWBITS):(cov_b1mxuecj0().b[42][1]++,this.params[key]));cov_b1mxuecj0().s[109]++;this._inflate=zlib.createInflateRaw({...this._options.zlibInflateOptions,windowBits});cov_b1mxuecj0().s[110]++;this._inflate[kPerMessageDeflate]=this;cov_b1mxuecj0().s[111]++;this._inflate[kTotalLength]=0;cov_b1mxuecj0().s[112]++;this._inflate[kBuffers]=[];cov_b1mxuecj0().s[113]++;this._inflate.on('error',inflateOnError);cov_b1mxuecj0().s[114]++;this._inflate.on('data',inflateOnData);}else{cov_b1mxuecj0().b[41][1]++;}cov_b1mxuecj0().s[115]++;this._inflate[kCallback]=callback;cov_b1mxuecj0().s[116]++;this._inflate.write(data);cov_b1mxuecj0().s[117]++;if(fin){cov_b1mxuecj0().b[43][0]++;cov_b1mxuecj0().s[118]++;this._inflate.write(TRAILER);}else{cov_b1mxuecj0().b[43][1]++;}cov_b1mxuecj0().s[119]++;this._inflate.flush(()=>{cov_b1mxuecj0().f[18]++;const err=(cov_b1mxuecj0().s[120]++,this._inflate[kError]);cov_b1mxuecj0().s[121]++;if(err){cov_b1mxuecj0().b[44][0]++;cov_b1mxuecj0().s[122]++;this._inflate.close();cov_b1mxuecj0().s[123]++;this._inflate=null;cov_b1mxuecj0().s[124]++;callback(err);cov_b1mxuecj0().s[125]++;return;}else{cov_b1mxuecj0().b[44][1]++;}const data=(cov_b1mxuecj0().s[126]++,bufferUtil.concat(this._inflate[kBuffers],this._inflate[kTotalLength]));cov_b1mxuecj0().s[127]++;if((cov_b1mxuecj0().b[46][0]++,fin)&&(cov_b1mxuecj0().b[46][1]++,this.params[`${endpoint}_no_context_takeover`])){cov_b1mxuecj0().b[45][0]++;cov_b1mxuecj0().s[128]++;this._inflate.close();cov_b1mxuecj0().s[129]++;this._inflate=null;}else{cov_b1mxuecj0().b[45][1]++;cov_b1mxuecj0().s[130]++;this._inflate[kTotalLength]=0;cov_b1mxuecj0().s[131]++;this._inflate[kBuffers]=[];}cov_b1mxuecj0().s[132]++;callback(null,data);});}/**
   * Compress data.
   *
   * @param {Buffer} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */_compress(data,fin,callback){cov_b1mxuecj0().f[19]++;const endpoint=(cov_b1mxuecj0().s[133]++,this._isServer?(cov_b1mxuecj0().b[47][0]++,'server'):(cov_b1mxuecj0().b[47][1]++,'client'));cov_b1mxuecj0().s[134]++;if(!this._deflate){cov_b1mxuecj0().b[48][0]++;const key=(cov_b1mxuecj0().s[135]++,`${endpoint}_max_window_bits`);const windowBits=(cov_b1mxuecj0().s[136]++,typeof this.params[key]!=='number'?(cov_b1mxuecj0().b[49][0]++,zlib.Z_DEFAULT_WINDOWBITS):(cov_b1mxuecj0().b[49][1]++,this.params[key]));cov_b1mxuecj0().s[137]++;this._deflate=zlib.createDeflateRaw({...this._options.zlibDeflateOptions,windowBits});cov_b1mxuecj0().s[138]++;this._deflate[kTotalLength]=0;cov_b1mxuecj0().s[139]++;this._deflate[kBuffers]=[];//
// An `'error'` event is emitted, only on Node.js < 10.0.0, if the
// `zlib.DeflateRaw` instance is closed while data is being processed.
// This can happen if `PerMessageDeflate#cleanup()` is called at the wrong
// time due to an abnormal WebSocket closure.
//
cov_b1mxuecj0().s[140]++;this._deflate.on('error',NOOP);cov_b1mxuecj0().s[141]++;this._deflate.on('data',deflateOnData);}else{cov_b1mxuecj0().b[48][1]++;}cov_b1mxuecj0().s[142]++;this._deflate[kCallback]=callback;cov_b1mxuecj0().s[143]++;this._deflate.write(data);cov_b1mxuecj0().s[144]++;this._deflate.flush(zlib.Z_SYNC_FLUSH,()=>{cov_b1mxuecj0().f[20]++;cov_b1mxuecj0().s[145]++;if(!this._deflate){cov_b1mxuecj0().b[50][0]++;cov_b1mxuecj0().s[146]++;//
// The deflate stream was closed while data was being processed.
//
return;}else{cov_b1mxuecj0().b[50][1]++;}let data=(cov_b1mxuecj0().s[147]++,bufferUtil.concat(this._deflate[kBuffers],this._deflate[kTotalLength]));cov_b1mxuecj0().s[148]++;if(fin){cov_b1mxuecj0().b[51][0]++;cov_b1mxuecj0().s[149]++;data=data.slice(0,data.length-4);}else{cov_b1mxuecj0().b[51][1]++;}//
// Ensure that the callback will not be called again in
// `PerMessageDeflate#cleanup()`.
//
cov_b1mxuecj0().s[150]++;this._deflate[kCallback]=null;cov_b1mxuecj0().s[151]++;if((cov_b1mxuecj0().b[53][0]++,fin)&&(cov_b1mxuecj0().b[53][1]++,this.params[`${endpoint}_no_context_takeover`])){cov_b1mxuecj0().b[52][0]++;cov_b1mxuecj0().s[152]++;this._deflate.close();cov_b1mxuecj0().s[153]++;this._deflate=null;}else{cov_b1mxuecj0().b[52][1]++;cov_b1mxuecj0().s[154]++;this._deflate[kTotalLength]=0;cov_b1mxuecj0().s[155]++;this._deflate[kBuffers]=[];}cov_b1mxuecj0().s[156]++;callback(null,data);});}}cov_b1mxuecj0().s[157]++;module.exports=PerMessageDeflate;/**
 * The listener of the `zlib.DeflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */function deflateOnData(chunk){cov_b1mxuecj0().f[21]++;cov_b1mxuecj0().s[158]++;this[kBuffers].push(chunk);cov_b1mxuecj0().s[159]++;this[kTotalLength]+=chunk.length;}/**
 * The listener of the `zlib.InflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */function inflateOnData(chunk){cov_b1mxuecj0().f[22]++;cov_b1mxuecj0().s[160]++;this[kTotalLength]+=chunk.length;cov_b1mxuecj0().s[161]++;if((cov_b1mxuecj0().b[55][0]++,this[kPerMessageDeflate]._maxPayload<1)||(cov_b1mxuecj0().b[55][1]++,this[kTotalLength]<=this[kPerMessageDeflate]._maxPayload)){cov_b1mxuecj0().b[54][0]++;cov_b1mxuecj0().s[162]++;this[kBuffers].push(chunk);cov_b1mxuecj0().s[163]++;return;}else{cov_b1mxuecj0().b[54][1]++;}cov_b1mxuecj0().s[164]++;this[kError]=new RangeError('Max payload size exceeded');cov_b1mxuecj0().s[165]++;this[kError][kStatusCode]=1009;cov_b1mxuecj0().s[166]++;this.removeListener('data',inflateOnData);cov_b1mxuecj0().s[167]++;this.reset();}/**
 * The listener of the `zlib.InflateRaw` stream `'error'` event.
 *
 * @param {Error} err The emitted error
 * @private
 */function inflateOnError(err){cov_b1mxuecj0().f[23]++;cov_b1mxuecj0().s[168]++;//
// There is no need to call `Zlib#close()` as the handle is automatically
// closed when an error is emitted.
//
this[kPerMessageDeflate]._inflate=null;cov_b1mxuecj0().s[169]++;err[kStatusCode]=1007;cov_b1mxuecj0().s[170]++;this[kCallback](err);}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,